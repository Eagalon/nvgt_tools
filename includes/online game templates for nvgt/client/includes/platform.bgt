string [] platforms;
string get_tile_at(int x, int y, int z)
{
string final;
for(uint i=0; i<platforms.length(); i++)
{
string[] parsed=string_split(platforms[i], ":", false);
if(parsed.length()>5)
{
int minx=string_to_number(parsed[0]);
int maxx=string_to_number(parsed[1]);
int miny=string_to_number(parsed[2]);
int maxy=string_to_number(parsed[3]);
int minz=string_to_number(parsed[4]);
int maxz=string_to_number(parsed[5]);
if(minx>x)
{
continue;
}
if(minx<=x and maxx>=x and miny<=y and maxy>=y and minz<=z and maxz>=z and parsed.length()>6)
{
final=parsed[6];
}
}
}
return final;
}
int get_tile_pitch(int x, int y, int z)
{
int final;
for(uint i=0; i<platforms.length(); i++)
{
string[] parsed=string_split(platforms[i], ":", false);
if(parsed.length()>5)
{
int minx=string_to_number(parsed[0]);
int maxx=string_to_number(parsed[1]);
int miny=string_to_number(parsed[2]);
int maxy=string_to_number(parsed[3]);
int minz=string_to_number(parsed[4]);
int maxz=string_to_number(parsed[5]);
if(minx>x)
{
continue;
}
else if(minx<=x and maxx>=x and miny<=y and maxy>=y and minz<=z and maxz>=z and parsed.length()==9)
{
final=string_to_number(parsed[7]);
}
else if(minx<=x and maxx>=x and miny<=y and maxy>=y and minz<=z and maxz>=z and parsed.length()>7)
{
final=string_to_number(parsed[7]);
}
else
{
final =100;
}
}
}
return final;
}
