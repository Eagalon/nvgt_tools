sound update;
void check_setup_update()
{
dl_file(webdir+"/game/installer_version.txt","update1.dat",true);
string hash=file_hash("update1.dat", 2, false);
file f;
if(!file_exists("update.dat"))
{
f.open("update.dat","wb");
f.write("0.1");
f.close();
}
file c;
c.open("update.dat","rb");
string hash2=c.read();
c.close();
/*
if(hash==hash2)
{
return;
}
*/
//sound update;
//speak("checking for updates");
//file f;
f.open("update.dat","rb");
string current_version=f.read();
f.close();
int current;
string[] data=string_split(current_version, ".", true);
if(data.length()>1)
{
current=string_to_number(data[0])+string_to_number(data[1]);
}
int latest;
string latest_version=url_get(webdir+"/game/installer_version.txt");
string[] data1=string_split(latest_version, ".", true);
if(data1.length()>1) latest=string_to_number(data1[0])+string_to_number(data1[1]);
string description=url_get(webdir+"/game/description.txt");
string update_error_reason=url_get(webdir+"/game/update_error_reason.txt");
if(latest_version=="" or string_contains(latest_version," ",1)!=-1 or string_contains(latest_version,"html",1)!=-1 or latest_version.length()<2 or latest_version.length()>5)
{
update.stream("sounds\\update_error.ogg");
speak("unable to check the update, reason, "+update_error_reason+".");
mainmenu();
}
if(current!=latest)
{
update.stream("sounds\\update_found.ogg");
dlg("There is a new update available for the game installer, your version, "+current_version+", latest version, "+latest_version+", description, "+description+"");
installer_update_ask();
}
}
void installer_update_ask()
{
string version=installer_version;
//show_game_window("updating game from version "+version+", to version "+latest_version+", please wait");
speak("update starting");
//sound update;
update.load("sounds\\updating.ogg");
update.play_looped();
string status=dl_file(webdir+"/game/stww-setup.exe","stww-setup.exe");
if(status=="canceled")
{
update.stop();
}
else if(status=="finished")
{
speak("update complated. Please wait extracting the files");
file_copy("update1.dat","update.dat",true);
file_delete("update1.dat");
update.stop();
wait(2000);
run("updater.cmd","",false,false);
exit();
}
}
void check_game_update()
{
//sound update;
speak(pu.get_value("checking for updates"));
string current_version=ver;
string[] data=string_split(ver, ".", true);
int current=string_to_number(data[0])+string_to_number(data[1]);
string latest_version=url_get(webdir+"/game/version.txt");
string[] data1=string_split(latest_version, ".", true);
int latest=string_to_number(data1[0])+string_to_number(data1[1]);
string description=url_get(webdir+"/game/description.txt");
string update_error_reason=url_get(webdir+"/game/update_error_reason.txt");
if(latest_version=="" or string_contains(latest_version," ",1)!=-1 or string_contains(latest_version,"html",1)!=-1 or latest_version.length()<2 or latest_version.length()>5)
{
update.stream("sounds\\update_error.ogg");
speak("unable to check the update, reason, "+update_error_reason+".");
mainmenu();
}
if(current!=latest)
{
update.stream("sounds\\update_found.ogg");
dlg("There is a new update available for the game, your version, "+current_version+", latest version, "+latest_version+", description, "+description+"");
game_update_ask();
}
}
void game_update_ask()
{
string version=ver;
//show_game_window("updating game from version "+version+", to version "+latest_version+", please wait");
speak("update starting");
//sound update;
update.load("sounds\\updating.ogg");
update.play_looped();
string status=dl_file(webdir+"/game/stww.exe","stww1.exe");
if(status=="canceled")
{
update.stop();
}
else if(status=="finished")
{
speak("update complated. Please wait extracting the files");
update.stop();
wait(2000);
run("release.exe","",false,false);
exit();
}
}
