string langdata;
string translate_text(string text)
{
	if(lang==""||lang=="english")
{
	return text;
}
	string[] rr=string_split(langdata,"\r\n",false);
	for(int i=0;i<rr.length();i++)
	{
		string[] q=string_split(rr[i],"=",true);
		if(string_contains(string_to_lower_case(text),q[0],1)>-1)
		{
			text=string_replace(text,q[0],q[1],false);
		}
	}
	return text;
}

class parsed_data{
	private string[] lines;
	private string[] values;
	private string file;
	private string text;
	bool set_file(string file){
		values.resize(0);
		lines.resize(0);
		this.file=file;
		file f;
		bool abrir=f.open(file,"r");
		if(!abrir){
speak("file upload failed continuing with default language");
			return this.file!="";
		}
		else{
			string d;
			d=f.read();
			string[] parseddata=string_split(d,"\r\n",false);
langdata=d;
			for(int i=0; i<parseddata.length(); i++){
				string[] parseddata2=string_split(parseddata[i],"{=}",false);
				if(parseddata2.length()!=2)continue;
				else
{
lines.insert_last(parseddata2[0]);
values.insert_last(parseddata2[1]);
	}
			}
		}
		return this.file!="";
	}
	string get_value(string line){
		for(uint i=0;i<lines.length();i++){
			if(lines[i]==line){
				for(uint i2=0;i2<values.length();i2++){
if(string_contains(values[i2],"%name",1)>-1) values[i2]=string_replace(values[i2],"%name",name,true);
					if(i==i2){
						return values[i2];
					}
				}
			}
		}
if(string_contains(line,"%name",1)>-1) line=string_replace(line,"%name",name,true);
		return line;
	}
}
