void save_char(player@p)
{
string n=p.name;
savedata player_data("chars/"+n+"/data.dat","0000");
player_data.add("x",p.x);
player_data.add("y",p.y);
player_data.add("z",p.z);
player_data.add("map",p.map);
player_data.add("health",p.health);
player_data.add("facing",p.facing);
player_data.add("pass",p.password);
player_data.add("lang",p.lang);
player_data.add("langchannel",p.langchannel);
player_data.add("muted",p.muted);
player_data.save();
charwrite(n,"inventory",serialize(p.inv));
charwrite(n,"invlist",p.invlist);

}
void load_char(player@p)
{
file f;
string n=p.name;
string dir="chars/"+p.name;
savedata d("chars/"+n+"/data.dat","0000");
d.load();
if(d.exists("x"))
p.x=d.readn("x");
if(d.exists("y"))
p.y=d.readn("y");
if(d.exists("z"))
p.z=d.readn("z");
if(d.exists("facing"))
p.facing=d.readn("facing");
if(d.exists("health"))
p.health=d.readn("health");
if(d.exists("map"))
p.map=d.read("map");
if(d.exists("pass"))
p.password=d.read("pass");
if(d.exists("lang"))
p.lang=d.read("lang");
if(d.exists("langchannel"))
p.langchannel=d.read("langchannel");
if(d.exists("muted"))
p.muted=d.read("muted");

f.open(dir+"/inventory.usr","rb");
p.inv=deserialize(f.read());
f.close();
send_reliable(p.peer_id,"inventory "+string_compress(dict_to_ini(p.inv)),0);
f.open(dir+"/invlist.usr","rb");
p.invlist=f.read();
f.close();
if(p.invlist=="")
{
string d;
string[] items=string_split(dict_to_ini(p.inv), "\r\n", false);
for(uint i2=0; i2<items.length(); i2++)
{
string[] items2=string_split(items[i2], "=", false);
p.add_inv_list(items2[0]);
}
}
send_reliable(p.peer_id,"invlist "+p.invlist,0);
}
void charwrite(string name, string thing, string value)
{
file f;
f.open("chars/"+name+"/"+thing+".usr","wb");
f.write(value);
f.close();
}
